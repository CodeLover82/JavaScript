[ 제이쿼리 ]
1. 엘리먼트를 선택하는 강력한방법과
2. 선택된 엘리먼트들을 효율적으로 제어할 수 있는 다양한 수단을 제공하는
3. 자바스크립트 라이브러리

$(제어대상).method1().method2();
   <주어>        <서술어>

제어대상 : 클래스(.), 아이디(#), 태그(X)
ex)
$('.welcome').html('hello').css('background-color', 'yellow');
 
$('body').prepend('<h1>hello</h1>'); // body 엘리먼트내부의 제일 앞에 내용을 추가.
$('#active').css('color', 'red').css('text-decoration', 'underline') // 밑줄 긋기

var li = $('li');
li[0], li[1] 사용 가능.
총 개수 : li.length;

이벤트 설정
$('#jquery').on('click', function(event){
   alert('jQuery');
}

문법 : .on( events [, selector ] [, data ], handler(eventObject) )

- selector
아래의 예제는 ul 엘리먼트의 하위 엘리먼트 중에  a, li 엘리먼트들에 대해서만 이벤트가 발생한다. 주의 할 것은 ul 엘리먼트는 이벤트가 발생하지 않는다는 점
  $('ul').on('click','a, li', function(event){
        console.log(this.tagName);
    })
    
- 다중 바인딩
$('#target').on('focus blur', function(e){
        $('#status').html(e.type);
    })
    
< jQuery와 Ajax >
형식 : jQuery.ajax(url [,settings])

// post 방식 처리
 $('#execute').click(function(){
        $.ajax({
            url:'./time2.php',
            type:'post',               // get, post
            data:$('form').serialize(), // 폼 데이터를 JSON 데이터형식에 맞게 변형해줌.
            success:function(data){
                $('#time').text(data);   // 데이터가 txt파일 그 자체를 집어넣으면 되므로
            }
        })
    })

// 서버에서 JSON 형식이 올 때
$('#execute').click(function(){
   $.ajax({
      url: './time2.php',    // 서버 주소
      dataType: 'json',      // 서버측에서 전송한 데이터를 어떤 형식의 데이터로 해석할 것인가를 지정한다. 
                             // 값으로 올 수 있는 것은 xml, json, script, html이다
      success:function(data){         
         var str = '';
         for(var i = 0;i < data.length;i++){
            str += '<li>' + data[i] + '</li'>
         }
         str = '<ul>' + str + '</ul>';
         
         $('#timezone').html(data);   // 데이터를 html태그와조합하여변형후 넣어야하므로 html
      }
   })
}
